# Script de configuration pour OnlyFlick (Windows PowerShell)
Write-Host "üöÄ Configuration du projet OnlyFlick..." -ForegroundColor Green

# V√©rifier si Flutter est install√©
Write-Host "üì± V√©rification de Flutter..." -ForegroundColor Yellow
try {
    $flutterVersion = flutter --version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Flutter trouv√©" -ForegroundColor Green
        Write-Host $flutterVersion
    } else {
        throw "Flutter non trouv√©"
    }
} catch {
    Write-Host "‚ùå Flutter n'est pas install√© ou pas dans le PATH" -ForegroundColor Red
    Write-Host "üì• Veuillez installer Flutter depuis: https://flutter.dev/docs/get-started/install/windows" -ForegroundColor Yellow
    Write-Host "üí° Installation rapide avec Git:" -ForegroundColor Cyan
    Write-Host "   cd C:\" -ForegroundColor White
    Write-Host "   git clone https://github.com/flutter/flutter.git -b stable" -ForegroundColor White
    Write-Host "   Ajoutez C:\flutter\bin au PATH" -ForegroundColor White
    exit 1
}

# V√©rifier si Go est install√©
Write-Host "üêπ V√©rification de Go..." -ForegroundColor Yellow
try {
    $goVersion = go version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Go trouv√©" -ForegroundColor Green
        Write-Host $goVersion
    } else {
        throw "Go non trouv√©"
    }
} catch {
    Write-Host "‚ùå Go n'est pas install√©" -ForegroundColor Red
    Write-Host "üì• Veuillez installer Go depuis: https://golang.org/dl/" -ForegroundColor Yellow
    exit 1
}

# Obtenir le r√©pertoire du script
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
Set-Location $scriptDir
Write-Host "üìÇ R√©pertoire actuel: $(Get-Location)" -ForegroundColor Cyan

# Cr√©er le fichier .env s'il n'existe pas
if (-not (Test-Path ".env")) {
    Write-Host "üìÑ Cr√©ation du fichier .env..." -ForegroundColor Yellow
    @"
# Configuration OnlyFlick Flutter
API_URL=http://localhost:8080
# Ajoutez d'autres variables d'environnement ici
"@ | Out-File -FilePath ".env" -Encoding UTF8
    Write-Host "‚úÖ Fichier .env cr√©√©" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Fichier .env existe d√©j√†" -ForegroundColor Green
}

# Installation des d√©pendances Flutter
Write-Host "üì¶ Installation des d√©pendances Flutter..." -ForegroundColor Yellow
flutter pub get

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ D√©pendances Flutter install√©es avec succ√®s" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de l'installation des d√©pendances Flutter" -ForegroundColor Red
    exit 1
}

# V√©rifier le backend Go
Write-Host "üîß V√©rification du backend Go..." -ForegroundColor Yellow
$backendPath = Join-Path (Split-Path $scriptDir -Parent) "Only-Flick-Go"
if (Test-Path $backendPath) {
    Set-Location $backendPath
    
    # T√©l√©charger les d√©pendances Go
    Write-Host "üì¶ Installation des d√©pendances Go..." -ForegroundColor Yellow
    go mod download
    
    # Tenter de compiler le backend
    Write-Host "üî® Compilation du backend Go..." -ForegroundColor Yellow
    go build -o api.exe cmd/api/main.go
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Backend Go compil√© avec succ√®s" -ForegroundColor Green
        
        # D√©marrer le backend en arri√®re-plan pour tester
        Write-Host "üöÄ Test de d√©marrage du backend..." -ForegroundColor Yellow
        $backendProcess = Start-Process -FilePath ".\api.exe" -PassThru
        
        # Attendre un peu
        Start-Sleep -Seconds 3
        
        # Tester si le backend r√©pond
        try {
            $response = Invoke-WebRequest -Uri "http://localhost:8080/health" -TimeoutSec 5 -ErrorAction Stop
            Write-Host "‚úÖ Backend Go fonctionne correctement" -ForegroundColor Green
        } catch {
            Write-Host "‚ö†Ô∏è  Backend Go compil√© mais ne r√©pond pas sur /health" -ForegroundColor Yellow
        }
        
        # Arr√™ter le backend de test
        Stop-Process -Id $backendProcess.Id -Force -ErrorAction SilentlyContinue
        
    } else {
        Write-Host "‚ùå Erreur lors de la compilation du backend Go" -ForegroundColor Red
        Write-Host "‚ö†Ô∏è  V√©rifiez les erreurs ci-dessus" -ForegroundColor Yellow
    }
    
    Set-Location $scriptDir
} else {
    Write-Host "‚ö†Ô∏è  R√©pertoire backend Go non trouv√©" -ForegroundColor Yellow
    Write-Host "üìÇ Assurez-vous que Only-Flick-Go est dans le m√™me r√©pertoire parent" -ForegroundColor Cyan
}

# V√©rifier la configuration Flutter
Write-Host "üîç Diagnostic Flutter..." -ForegroundColor Yellow
flutter doctor

Write-Host ""
Write-Host "üéâ Configuration termin√©e!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Prochaines √©tapes:" -ForegroundColor Cyan
Write-Host "   1. D√©marrez le backend Go:" -ForegroundColor White
Write-Host "      cd ..\Only-Flick-Go && go run cmd/api/main.go" -ForegroundColor Gray
Write-Host ""
Write-Host "   2. Dans un autre terminal, d√©marrez Flutter:" -ForegroundColor White
Write-Host "      cd Only-Flick-Flutter && flutter run" -ForegroundColor Gray
Write-Host ""
Write-Host "   3. Testez la messagerie via l'onglet Messages dans l'app" -ForegroundColor White
Write-Host ""
Write-Host "üìö Consultez SETUP_MESSAGING.md pour plus de d√©tails" -ForegroundColor Cyan
